package com.lance.code.jsoup.service;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import org.jsoup.Jsoup;

public class Kaihei {
	public static void main(String[] args) {
		
		Integer[] users = {5950,6100,6098,2896,3344,4945,6052,6108,5980,6000,6660,2751,6009,6080,1279,1590,1076,3868,5949,5316,6145,6022,2447,6271,5984,5970,920,4597,649,2265,6675,1872,3041,6109,6198,1128,6443,2433,6326,1016,6179,6,6301,5893,6054,4028,2663,5898,6361,6286,6330,6317,6601,1205,580,5287,1257,551,323,4410,5930,6101,5865,1616,5714,1896,6096,6088,5878,5901,5932,6579,5948,5114,3435,1563,6247,1826,6190,2123,6086,6072,6312,6071,2065,949,951,978,6211,2227,6226,6424,1218,3958,5021,2324,2570,6804,3810,415,6339,6230,4018,1202,6420,4531,3695,1897,6241,2078,6127,5020,2622,1062,426,66,6671,2528,4629,5911,2290,6032,6520,2603,586,2134,6663,4210,6149,6325,3031,6324,400,2829,3892,2707,490,156,4072,595,522,1515,2350,3755,2739,5807,264,3224,1024,3707,1074,4458,2169,2320,3550,1781,6128,6549,6669,733,4040,5843,6078,1995,4591,2694,4377,4796,796,133,1885,543,737,4348,2352,6454,4048,6560,6475,6282,3586,2366,6158,6315,2359,3279,5871,6347,6648,6672,810,3394,5365,363,2137,6515,4380,1879,1982,2852,1874,6138,5995,3559,5588,3395,2919,4202,2028,4408,2943,1418,5905,6144,4836,1250,5889,5886,6298,6237,1203,5904,6081,6476,4770,3980,3611,4835,3290,5881,6073,5985,6216,4022,6236,6202,6276,4998,6146,6697,6383,6031,6652,1417,5861,84,5933,2375,1180,204,4481,3496,1635,5864,5925,6178,5942,2255,4239,6183,6165,2564,2833,6272,1429,6077,6547,6169,5321,1658,2679,859,4057,2032,5891,6506,3048,4428,5868,2133,2437,4398,6162,1732,375,5821,2937,2479,6895,633,5931,4326,1131,3098,1941,5129,1619,2164,6249,60,2857,5286,6008,5883,2808,1482,4231,5957,5997,2726,192,5986,6294,4721,4215,3905,5922,1751,2875,4809,3457,2536,4746,904,1540,5181,3404,625,2400,3378,2374,1334,1332,614,478,1687,408,2732,5993,638,539,67,2855,2580,1814,3441,1114,6478,1833,564,6487,1575,5956,1374,20,3990,2084,2794,3189,3839,6803,6777,4647,6805,3623,1715,1379,2043,410,1215,779,297,2300,5119,927,6025,479,3992,6615,4712,2868,3735,2384,2099,2500,5811,5194,2008,2055,4938,781,6634,2304,4984,535,4343,2698,3149,6192,6468,598,5123,6657,4178,307,1359,6445,4624,243,5080,803,4595,2167,1085,6334,6002,6779,6261,3448,4145,2367,6566,1645,6570,6488,3167,1421,2241,5038,2768,6124,6042,1759,4235,5715,120,5195,678,2490,5888,4825,6079,783,3966,5991,5983,127,6401,6258,5720,4249,2072,6320,169,6486,4683,6608,3845,675,6263,5939,6161,6529,5982,331,5775,2960,6781,6389,6516,4031,2702,5768,3016,422,1997,4722,5935,3716,6103,2118,5870,6335,5918,6244,5882,3366,2080,6033,6727,4321,1168,6152,4068,4732,3064,2632,609,3146,863,6043,2583,5706,754,5902,6114,2986,2771,1578,5994,6327,768,5872,6056,6115,6245,6091,1172,5987,2785,46,5722,6110,3218,4436,6207,6051,6057,5958,2268,4156,6437,2588,6066,3812,266,5170,250,6346,5973,6435,6281,4272,5716,6421,4371,3953,6028,5912,6904,6722,2011,5126,6304,200,4955,412,6257,6283,1910,6049,465,5867,2811,2280,2316,2548,6557,3221,4632,6044,2566,5185,6846,5849,4660,6147,2699,3497,168,3475,4175,3515,3934,1403,6212,6300,2727,3914,3575,4506,2860,6902,6394,5972,6011,6075,3106,6251,6228,6113,1398,4415,3857,4655,1033,4365,6240,4095,4433,6455,5937,332,253,6673,4502,2624,6224,6208,1345,4396,3880,6356,526,1835,4132,6095,6295,6246,3042,5804,4537,449,1422,6093,3693,2515,714,1804,5014,3705,3828,1614,6133,987,1093,1749,5976,6336,6242,6681,670,6447,4192,5981,3746,852,6331,4286,1380,6701,5844,686,6184,143,1331,6350,4838,1842,1344,5940,387,287,1025,5769,5765,1437,2695,6778,2233,396,4725,6122,827,4641,5913,94,4805,6717,3200,653,2981,3539,1320,6618,3523,5215,1913,5759,162,6411,914,3341,758,6676,561,4929,6047,6303,495,3824,887,2517,3910,1130,6431,6733,6069,906,5860,3312,6030,2882,5869,6112,6164,5304,3489,5866,6397,2471,6899,5969,6287,1409,3920,5946,6896,2558,3797,5977,6121,3681,3107,6160,6751,1762,2175,3650,6766,6048,2195,736,6187,6266,1626,6248,52,6020,6493,6131,3672,6250,3003,2754,6319,6275,6046,3564,6173,5760,5915,4866,1728,4598,6118,5318,4204,518,6565,4873,6163,6089,399,6005,953,4409,1899,1752,5885,6104,6143,3402,6151,5943,4581,788,6120,6925,2336,6562,1922,2645,6111,6523,5709,6155,4564,6514,6225,6340,4078,2738,5054,6359,6610,6061,5093,276,5862,5711,891,5964,975,17,6116,2155,173,6218,6038,3022,2284,6059,6123,4529,6338,158,5887,4853,6620,6593,6278,6153,6306,6034,5013,6205,3506,6076,1951,6349,77,3038,6106,3547,3215,98,4094,3959,3637,2214,2176,690,5890,3137,6926,2716,6569,2540,3396,6253,5875,6360,2750,6355,2222,874,5923,681,1829,295,6646,2734,5903,2803,6318,6645,19,6788,6309,4909,5967,1178,4182,6811,6209,6140,6166,6296,5725,3641,1866,6341,5136,1912,6332,2816,6135,2251,3674,4711,6200,3984,973,2436,5016,2993,730,6090,6285,4162,4737,3819,4759,5938,1041,3553,6316,2884,3112,6354,2070,1857,5584,6102,114,3780,2971,1780,3945,6021,3516,239,6262,1148,301,2338,6917,1744,6365,5219,4781,5349,5753,3481,6522,6837,4388,6641,6548,6381,4241,3150,6142,1787,2690,4733,6039,1978,4143,1119,4924,3859,2059,230,6105,6348,658,4565,5916,54,2799,4464,514,6015,1975,3390,5700,1113,4336,4547,5783,2721,269,3463};
		
		//小云 609
		//自己 4126
		//梁景添
		
		String url = "http://1028.by-health.com/KaiHey/user/battle?attackUserId=4126&beAttackUserId=";
		Random random = new Random();
		while(true){
			try {
				Thread.sleep(3000);
				int i = random.nextInt(users.length);
				String newurl = url+users[i];
				System.out.println(newurl);
				String response = Jsoup.connect(newurl)
				.header("Accept", "application/json, text/plain, */*")
				.header("Accept-Encoding", "gzip, deflate")
				.header("Content-Type", "application/x-www-form-urlencoded")
				.header("Accept", "text/*, application/xml,application/xhtml+xml")
				.header("Cookie", "Hm_lpvt_f970cc249fbc73392d6c8e526e45319c=1509074187; Hm_lvt_f970cc249fbc73392d6c8e526e45319c=1509022854,1509026452,1509065316,1509072765;")
				.header("User-Agent", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_1 like Mac OS X) AppleWebKit/604.3.5 (KHTML, like Gecko) Mobile/15B93 kkPlus/v5.2.6.R.20170620,3 ekp-i-kk5")
				.ignoreContentType(true).post().body().text();
				System.out.println(response);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		
	}
}


