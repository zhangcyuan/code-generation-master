package com.lance.code.generation.common;

import java.util.Date;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.time.DateFormatUtils;

import com.lance.code.generation.domain.TableInfo;

public final class ControllerMethod {

	public static String controllerGetOne(TableInfo info) {
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 根据属性获取单个 ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"根据属性获取单个\", notes = \"根据属性获取单个\",")
		.append("response=")
		.append(modelName).append(".class").append(",responseContainer=\"Map\")")
		
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("get")
		.append("\", method = RequestMethod.GET)")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.PUBLIC)
		.append(KeyWords.SPACE)
		.append(KeyWords.APIRETURNOBJECT)
		.append(KeyWords.SPACE)
		.append("get")
		.append("(")
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append("){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.RETURN)
		.append(" new ")
		.append(KeyWords.APIRETURNOBJECT)
		.append("(")
		.append(StringUtils.uncapitalize(importService))
		.append(".getOne")
		.append("(")
		.append(StringUtils.uncapitalize(modelName))
		.append("));")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
	public static String controllerList(TableInfo info) {
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 获取列表 ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"获取列表\", notes = \"获取列表\",")
		.append("response=")
		.append(modelName).append(".class").append(",responseContainer=\"List\")")
		
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("list")
		.append("\", method = RequestMethod.GET)")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.PUBLIC)
		.append(KeyWords.SPACE)
		.append(KeyWords.APIRETURNOBJECT)
		.append(KeyWords.SPACE)
		.append("list")
		.append("(")
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append("){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.RETURN)
		.append(" new ")
		.append(KeyWords.APIRETURNOBJECT)
		.append("(")
		.append(StringUtils.uncapitalize(importService))
		.append(".")
		.append("list")
		.append("(")
		.append(StringUtils.uncapitalize(modelName))
		.append("));")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
	public static String controllerSave(TableInfo info) {
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 新增 ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"新增对象\", notes = \"新增对象\",")
		.append("response= Integer.class)")
		
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("save")
		.append("\", method = RequestMethod.POST)")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.PUBLIC)
		.append(KeyWords.SPACE)
		.append(KeyWords.APIRETURNOBJECT)
		.append(KeyWords.SPACE)
		.append("save")
		.append("(")
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append("){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("int count = ")
		.append(StringUtils.uncapitalize(importService))
		.append(".")
		.append("save")
		.append("(")
		.append(StringUtils.uncapitalize(modelName))
		.append(");")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("if(count>0){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_000);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}else{")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_100);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
	public static String controllerUpdate(TableInfo info){
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 修改 ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"修改对象\", notes = \"修改对象\")")
		
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("update")
		.append("\", method = RequestMethod.POST)")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.PUBLIC)
		.append(KeyWords.SPACE)
		.append(KeyWords.APIRETURNOBJECT)
		.append(KeyWords.SPACE)
		.append("update")
		.append("(")
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append("){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("int count = ")
		.append(StringUtils.uncapitalize(importService))
		.append(".")
		.append("update")
		.append("(")
		.append(StringUtils.uncapitalize(modelName))
		.append(");")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("if(count>0){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_000);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}else{")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_100);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
	public static String controllerDelete(TableInfo info) {
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 根据对象删除 ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"根据对象删除\", notes = \"根据对象删除\")")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("delete")
		.append("\", method = RequestMethod.POST)")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.PUBLIC)
		.append(KeyWords.SPACE)
		.append(KeyWords.APIRETURNOBJECT)
		.append(KeyWords.SPACE)
		.append("delete")
		.append("(")
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append("){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("int count = ")
		.append(StringUtils.uncapitalize(importService))
		.append(".")
		.append("delete")
		.append("(")
		.append(StringUtils.uncapitalize(modelName))
		.append(");")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("if(count>0){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_000);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}else{")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_100);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
	public static String controllerDeleteByPrimaryKey(TableInfo info) {
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 根据主键删除")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"根据ID删除\", notes = \"根据ID删除\")")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("deleteByPrimaryKey")
		.append("\", method = {RequestMethod.GET, RequestMethod.POST })")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("public ApiReturnObject deleteByPrimaryKey(Integer id){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("int count = ")
		.append(StringUtils.uncapitalize(importService))
		.append(".deleteByPrimaryKey(id);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("if(count>0){")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_000);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}else{")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return new ApiReturnObject(StateCode.CODE_100);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	

	public static String controllerPage(TableInfo info) {
		String importService = JavaBeanHandler.className(info.getTableName(), ConfigConstants.SERVICE_PACKAGE);
		String modelName = JavaBeanHandler.domainClassName(info.getTableName());
		StringBuilder builder = new StringBuilder();
		//方法注释
		builder
		.append(KeyWords.Tab)
		.append("/**")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* 分页查询列表")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("* ").append("@since ").append(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"))
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("*/")
		
		//方法开始
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("@ApiOperation(value = \"分页查询列表\", notes = \"分页查询列表\",")
		.append("response= Page.class")
		.append(",responseContainer=\"Map\")")
		
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.RESPONSEBODY)
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.REQUESTMAPPING)
		.append("(value = \"/")
		.append("page")
		.append("\", method = {RequestMethod.GET, RequestMethod.POST })")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("public ApiReturnObject page(Page<")
		.append(modelName)
		.append("> page, ")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(modelName)
		.append(KeyWords.SPACE)
		.append(StringUtils.uncapitalize(modelName))
		.append(", HttpServletResponse response) {")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("ApiReturnObject o;")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("try {")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("Page<")
		.append(modelName)
		.append("> pageData = ")
		.append(StringUtils.uncapitalize(importService))
		.append(".getDataPage(page, ")
		.append(StringUtils.uncapitalize(modelName))
		.append(");")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("o = new ApiReturnObject(pageData);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("response.setStatus(HttpServletResponse.SC_OK);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("} catch (Exception e) {")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("o = new ApiReturnObject(StateCode.CODE_100);")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("logger.error(e.getMessage());")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append(KeyWords.Tab)
		.append("return o;")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.Tab)
		.append("}")
		.append(KeyWords.NEWLINE)
		.append(KeyWords.NEWLINE);
		return builder.toString(); 
	}
	
}
